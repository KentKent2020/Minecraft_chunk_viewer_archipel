{"version":3,"sources":["../../../src/lib/deck.js"],"names":["LayerManager","ViewManager","MapView","EffectManager","Effect","DeckRenderer","DeckPicker","Tooltip","log","deckGlobal","AnimationLoop","createGLContext","instrumentGLContext","setParameters","Timeline","lumaStats","Stats","EventManager","assert","EVENTS","noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","touchAction","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLoad","debug","drawPickingColors","_framebuffer","_animate","defaultProps","_onMetrics","Deck","props","Object","assign","viewManager","layerManager","effectManager","deckRenderer","deckPicker","_needsRedraw","_pickRequest","_lastPointerDownInfo","initialViewState","interactiveState","_onEvent","bind","_onPointerDown","_onPointerMove","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","isIE11","warn","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","stats","metrics","fps","setPropsTime","updateAttributesTime","framesRedrawn","pickTime","pickCount","gpuTime","gpuTimePerFrame","cpuTime","cpuTimePerFrame","bufferMemory","textureMemory","renderbufferMemory","gpuMemory","_metricsCounter","setProps","start","stop","finalize","eventManager","destroy","tooltip","remove","parentElement","removeChild","get","timeStart","removed","_setCanvasSize","newProps","_getViews","_getViewState","timeEnd","opts","clearRedrawFlags","redraw","viewManagerNeedsRedraw","needsRedraw","layerManagerNeedsRedraw","effectManagerNeedsRedraw","deckRendererNeedsRedraw","force","redrawReason","incrementCount","_customRender","_drawLayers","rect","getViewports","infos","_pick","result","length","depth","method","statKey","getLayers","viewports","onViewportActive","activateViewport","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","autoResizeViewport","onCreateContext","onInitialize","onRender","Array","isArray","event","type","x","y","radius","leftButton","rightButton","pos","offsetCenter","context","mousePosition","callback","onHover","mode","emptyInfo","shouldGenerateInfo","getTooltip","pickedInfo","find","info","index","displayInfo","setTooltip","cursor","enable","copyState","blend","blendFunc","polygonOffsetFill","depthTest","depthFunc","timeline","play","attachTimeline","events","pointerdown","pointermove","pointerleave","eventType","on","onInteractiveStateChange","viewport","deck","_updateCanvasSize","renderOptions","renderLayers","target","getViews","pass","getEffects","_setGLContext","animationProps","_getFrameStats","_getMetrics","reset","table","_updateCursor","updateLayers","updateViewStates","params","viewId","eventOptions","getLastPickedObject","layer","layerHandler","handler","rootHandler","handled","call","pickObject","animationLoopStats","addTime","lastTiming","getHz","time","count","getAverageTime","memoryStats","window","undefined","navigator","userAgent","indexOf","VERSION"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport Effect from './effect';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport Tooltip from './tooltip';\nimport log from '../utils/log';\nimport deckGlobal from './init';\n\nimport GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  createGLContext,\n  instrumentGLContext,\n  setParameters,\n  Timeline,\n  lumaStats\n} from '@luma.gl/core';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global window, document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    touchAction: PropTypes.string,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLoad: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n    _framebuffer: PropTypes.object,\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  touchAction: 'none',\n  _framebuffer: null,\n  _animate: false,\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.deckRenderer = null;\n    this.deckPicker = null;\n\n    this._needsRedraw = true;\n    this._pickRequest = {};\n    // Pick and store the object under the pointer on `pointerdown`.\n    // This object is reused for subsequent `onClick` and `onDrag*` callbacks.\n    this._lastPointerDownInfo = null;\n\n    this.viewState = props.initialViewState || null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    if (isIE11()) {\n      log.warn('IE 11 support will be deprecated in v8.0')();\n    }\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n    this.metrics = {\n      fps: 0,\n      setPropsTime: 0,\n      updateAttributesTime: 0,\n      framesRedrawn: 0,\n      pickTime: 0,\n      pickCount: 0,\n      gpuTime: 0,\n      gpuTimePerFrame: 0,\n      cpuTime: 0,\n      cpuTimePerFrame: 0,\n      bufferMemory: 0,\n      textureMemory: 0,\n      renderbufferMemory: 0,\n      gpuMemory: 0\n    };\n    this._metricsCounter = 0;\n\n    this.setProps(props);\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n    this._lastPointerDownInfo = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.viewManager) {\n      this.viewManager.finalize();\n      this.viewManager = null;\n    }\n\n    if (this.effectManager) {\n      this.effectManager.finalize();\n      this.effectManager = null;\n    }\n\n    if (this.deckRenderer) {\n      this.deckRenderer.finalize();\n      this.deckRenderer = null;\n    }\n\n    if (this.deckPicker) {\n      this.deckPicker.finalize();\n      this.deckPicker = null;\n    }\n\n    if (this.eventManager) {\n      this.eventManager.destroy();\n    }\n\n    if (this.tooltip) {\n      this.tooltip.remove();\n      this.tooltip = null;\n    }\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      views: this._getViews(this.props),\n      width: this.width,\n      height: this.height\n    });\n\n    const viewState = this._getViewState(props);\n    if (viewState) {\n      newProps.viewState = viewState;\n    }\n\n    // Update view manager props\n    if (this.viewManager) {\n      this.viewManager.setProps(newProps);\n    }\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setProps(newProps);\n    }\n\n    if (this.effectManager) {\n      this.effectManager.setProps(newProps);\n    }\n\n    // Update animation loop\n    if (this.animationLoop) {\n      this.animationLoop.setProps(newProps);\n    }\n\n    if (this.deckRenderer) {\n      this.deckRenderer.setProps(newProps);\n    }\n\n    if (this.deckPicker) {\n      this.deckPicker.setProps(newProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  // opts.clearRedrawFlags (Boolean) - clear the redraw flag. Default `true`\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  redraw(force) {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // If force is falsy, check if we need to redraw\n    const redrawReason = force || this.needsRedraw({clearRedrawFlags: true});\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D} */\n  pickObject(opts) {\n    const infos = this._pick('pickObject', 'pickObject Time', opts).result;\n    return infos.length ? infos[0] : null;\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D, depth = 10} */\n  pickMultipleObjects(opts) {\n    opts.depth = opts.depth || 10;\n    return this._pick('pickObject', 'pickMultipleObjects Time', opts).result;\n  }\n\n  /* {x, y, width = 1, height = 1, layerIds = null} */\n  pickObjects(opts) {\n    return this._pick('pickObjects', 'pickObjects Time', opts);\n  }\n\n  // Private Methods\n\n  _pick(method, statKey, opts) {\n    const {stats} = this;\n\n    stats.get('Pick Count').incrementCount();\n    stats.get(statKey).timeStart();\n\n    const infos = this.deckPicker[method](\n      Object.assign(\n        {\n          layers: this.layerManager.getLayers(opts),\n          viewports: this.getViewports(opts),\n          onViewportActive: this.layerManager.activateViewport\n        },\n        opts\n      )\n    );\n\n    stats.get(statKey).timeEnd();\n\n    return infos;\n  }\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      autoResizeViewport: false,\n      gl,\n      onCreateContext: opts =>\n        createGLContext(Object.assign({}, glOptions, opts, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState(props) {\n    return props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews(props) {\n    // Default to a full screen map view port\n    let views = props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = props.controller;\n    }\n    return views;\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  _onPointerMove(event) {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    if (this.layerManager) {\n      this.layerManager.context.mousePosition = {x: _pickRequest.x, y: _pickRequest.y};\n    }\n\n    _pickRequest.callback = this.props.onHover;\n    _pickRequest.event = event;\n    _pickRequest.mode = 'hover';\n  }\n\n  // Actually run picking\n  _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.mode) {\n      // perform picking\n      const {result, emptyInfo} = this._pick('pickObject', 'pickObject Time', _pickRequest);\n      const shouldGenerateInfo = _pickRequest.callback || this.props.getTooltip;\n      const pickedInfo = shouldGenerateInfo && (result.find(info => info.index >= 0) || emptyInfo);\n      if (this.props.getTooltip) {\n        const displayInfo = this.props.getTooltip(pickedInfo);\n        this.tooltip.setTooltip(displayInfo, pickedInfo.x, pickedInfo.y);\n      }\n      if (_pickRequest.callback) {\n        _pickRequest.callback(pickedInfo, _pickRequest.event);\n      }\n      _pickRequest.mode = null;\n    }\n  }\n\n  _updateCursor() {\n    if (this.canvas) {\n      this.canvas.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      instrumentGLContext(gl, {enable: true, copyState: true});\n    }\n\n    this.tooltip = new Tooltip(this.canvas);\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    // timeline for transitions\n    const timeline = new Timeline();\n    timeline.play();\n    this.animationLoop.attachTimeline(timeline);\n\n    this.eventManager = new EventManager(this.props.parent || gl.canvas, {\n      touchAction: this.props.touchAction,\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerMove\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      timeline,\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange,\n      views: this._getViews(this.props),\n      viewState: this._getViewState(this.props),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    const viewport = this.viewManager.getViewports()[0];\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport,\n      timeline\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason, renderOptions) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    this.deckRenderer.renderLayers(\n      Object.assign(\n        {\n          target: this.props._framebuffer,\n          layers: this.layerManager.getLayers(),\n          viewports: this.viewManager.getViewports(),\n          onViewportActive: this.layerManager.activateViewport,\n          views: this.viewManager.getViews(),\n          pass: 'screen',\n          redrawReason,\n          effects: this.effectManager.getEffects()\n        },\n        renderOptions\n      )\n    );\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl}) {\n    this._setGLContext(gl);\n  }\n\n  _onRenderFrame(animationProps) {\n    this._getFrameStats();\n\n    // Log perf stats every second\n    if (this._metricsCounter++ % 60 === 0) {\n      this._getMetrics();\n      this.stats.reset();\n      log.table(4, this.metrics)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(this.metrics);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers();\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw(false);\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates();\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState = {...this.viewState, [params.viewId]: viewState};\n      if (!this.props.viewState) {\n        // Apply internal view state\n        this.viewManager.setProps({viewState: this.viewState});\n      }\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker.getLastPickedObject(\n      {\n        x: pos.x,\n        y: pos.y,\n        layers,\n        viewports: this.getViewports(pos)\n      },\n      this._lastPointerDownInfo\n    );\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerDown(event) {\n    const pos = event.offsetCenter;\n    this._lastPointerDownInfo = this.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius: this.props.pickingRadius\n    });\n  }\n\n  _getFrameStats() {\n    const {stats} = this;\n    stats.get('frameRate').timeEnd();\n    stats.get('frameRate').timeStart();\n\n    // Get individual stats from luma.gl so reset works\n    const animationLoopStats = this.animationLoop.stats;\n    stats.get('GPU Time').addTime(animationLoopStats.get('GPU Time').lastTiming);\n    stats.get('CPU Time').addTime(animationLoopStats.get('CPU Time').lastTiming);\n  }\n\n  _getMetrics() {\n    const {metrics, stats} = this;\n    metrics.fps = stats.get('frameRate').getHz();\n    metrics.setPropsTime = stats.get('setProps Time').time;\n    metrics.updateAttributesTime = stats.get('Update Attributes').time;\n    metrics.framesRedrawn = stats.get('Redraw Count').count;\n    metrics.pickTime =\n      stats.get('pickObject Time').time +\n      stats.get('pickMultipleObjects Time').time +\n      stats.get('pickObjects Time').time;\n    metrics.pickCount = stats.get('Pick Count').count;\n\n    // Luma stats\n    metrics.gpuTime = stats.get('GPU Time').time;\n    metrics.cpuTime = stats.get('CPU Time').time;\n    metrics.gpuTimePerFrame = stats.get('GPU Time').getAverageTime();\n    metrics.cpuTimePerFrame = stats.get('CPU Time').getAverageTime();\n\n    const memoryStats = lumaStats.get('Memory Usage');\n    metrics.bufferMemory = memoryStats.get('Buffer Memory').count;\n    metrics.textureMemory = memoryStats.get('Texture Memory').count;\n    metrics.renderbufferMemory = memoryStats.get('Renderbuffer Memory').count;\n    metrics.gpuMemory = memoryStats.get('GPU Memory').count;\n  }\n}\n\nfunction isIE11() {\n  if (typeof window === undefined) {\n    return false;\n  }\n  const navigator = window.navigator || {};\n  const userAgent = navigator.userAgent || '';\n  return userAgent.indexOf('Trident/') !== -1;\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n\n// This is used to defeat tree shaking of init.js\n// https://github.com/uber/deck.gl/issues/3213\nDeck.VERSION = deckGlobal.VERSION;\n"],"file":"deck.js"}